---
---

<button
  id="themeToggle"
  class="fixed top-4 right-4 z-50 p-2 rounded-full bg-light dark:bg-dark border border-dark/10 dark:border-light/10 hover:border-red transition-colors duration-300 group"
>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    class="w-6 h-6 text-dark dark:text-light group-hover:text-red transition-colors duration-300"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
  >
    <path
      class="sun hidden dark:block"
      d="M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42"
    ></path>
    <circle
      class="sun hidden dark:block"
      cx="12"
      cy="12"
      r="5"
    ></circle>
    <path
      class="moon dark:hidden"
      d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"
    ></path>
  </svg>
</button>

<script>
  const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    }
    return 'light';
  })();

  if (theme === 'light') {
    document.documentElement.classList.remove('dark');
  } else {
    document.documentElement.classList.add('dark');
  }

  window.localStorage.setItem('theme', theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle('dark');

    const isDark = element.classList.contains('dark');
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
  };

  document
    .getElementById('themeToggle')
    ?.addEventListener('click', handleToggleClick);
</script>
